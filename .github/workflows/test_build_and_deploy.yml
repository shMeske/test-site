name: Test, Build an Deploy

on:
  push:
    branches: [ gh-pages ]
  pull_request:
    branches: [ master ]

jobs:
  setup_environment:
    runs-on: ubuntu-latest
    permissions:
      pages: write      # to deploy to Pages
      id-token: write   # to verify the deployment originates from an appropriate source
      contents: read
    strategy:
      matrix:
        python-version: [ "3.10" ]
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry
          pip install poethepoet
          poetry config virtualenvs.in-project true
          poetry install -E mne -E jupyter
  test:
    needs: setup_environment
    runs-on: ubuntu-latest
    permissions:
      pages: write      # to deploy to Pages
      id-token: write   # to verify the deployment originates from an appropriate source
      contents: read
    strategy:
      matrix:
        python-version: [ "3.10" ]
    steps:
      - name: Testing
        if: ${{ matrix.python-version == '3.10' }}
        run: |
          poetry run poe test
  build_and_upload_artifact:
    needs: test
    runs-on: ubuntu-latest
    permissions:
      pages: write      # to deploy to Pages
      id-token: write   # to verify the deployment originates from an appropriate source
      contents: read
    strategy:
      matrix:
        python-version: ["3.10"]
    steps:
    - name: Building
      if: ${{ matrix.python-version == '3.10' }}
      run: |
        poetry run poe build_pipelines
    - name: Upload site as artifact
      if: ${{ matrix.python-version == '3.10' }}
      uses: actions/upload-pages-artifact@v1
      with:
        name: github-pages
        path: index
  upload_artifact:
    needs: build_and_upload_artifact

    permissions:
      pages: write      # to deploy to Pages
      id-token: write   # to verify the deployment originates from an appropriate source

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
          
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2

